<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.michael.controller" />
    <context:component-scan base-package="com.aoptest.aop" />

    <!--<mvc:annotation-driven>会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter两个Bean,这是Spring MVC为@Controller分发请求所必需的-->
    <mvc:annotation-driven />

    <!--<mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>  -->
    <!--<mvc:default-servlet-handler/> -->
     <!-- -->
    <!--<mvc:resources mapping="/pages/**" location="/WEB-INF/pages/"/>  -->
    <!--<mvc:default-servlet-handler/>-->
    <!-- -->
    <!--<mvc:resources mapping="/imageCut/**" location="/WEB-INF/imageCut/"/>  -->
    <mvc:default-servlet-handler/>
    
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJackson2HttpMessageConverter" />
            </list>
        </property>
    </bean>
    <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>text/json;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--
    通过aop命名空间的<aop:aspectj-autoproxy />声明自动为spring容器中那些配置@aspectJ切面的bean创建代理，织入切面。当然，spring
    在内部依旧采用AnnotationAwareAspectJAutoProxyCreator进行自动代理的创建工作，但具体实现的细节已经被<aop:aspectj-autoproxy />
    隐藏起来了
    -->
    <!--<bean id="user" class="com.michael.model.User" >-->
        <!--<property name="id" value="2" />-->
        <!--<property name="userName" value="springMVC-servlet.xml" />-->
        <!--<property name="userAge" value="2" />-->
    <!--</bean>-->
    <!--<bean id="catBeanPostProcessor" class="com.michael.beanpostprocessor.UserBeanPostProcessor" />-->


    <aop:aspectj-autoproxy/>
    <!--<bean-->
        <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix">-->
            <!--<value>/WEB-INF/pages/</value>-->
        <!--</property>-->
        <!--<property name="suffix">-->
            <!--<value>.jsp</value>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean id="multipartResolver"  -->
        <!--class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  -->
        <!--<property name="defaultEncoding" value="utf-8" />  -->
        <!--<property name="maxUploadSize" value="10485760" />  -->
        <!--<property name="maxInMemorySize" value="40960" />  -->
    <!--</bean>  -->

</beans>
